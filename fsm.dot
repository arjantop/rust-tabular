digraph finite_state_machine {
	rankdir=LR;
	size="8,5"
    node [shape = doublecircle]; ROW_DONE ERROR;
    node [shape = point]; IN;
    node [shape = circle];

    IN -> START;
    START -> READ_COLUMN;
    START -> ERROR [ label="EOF" ];
    READ_COLUMN -> UNQUOTED;

    UNQUOTED -> READ_COLUMN [ label = "','" ];
    UNQUOTED -> UNQUOTED [ label = "^',',line_end" ];
    UNQUOTED -> ROW_DONE [ label = "line_end,EOF" ];

    READ_COLUMN -> QUOTED [ label = "quote_char" ];
    QUOTED -> QUOTED [ label = "^quote_char,escape_char" ];
    QUOTED -> ESCAPED [ label = "escape_char if escape_char != quote_char" ];
    ESCAPED -> QUOTED [ label = "quote_char" ];
    ESCAPED -> ERROR;
    QUOTED -> QUOTED_END [ label = "quote_char if escape_char != quote_char" ];
    QUOTED_END -> READ_COLUMN [ label = "','" ];
    QUOTED_END -> ROW_DONE [ label = "line_end,EOF" ];
    QUOTED_END -> ERROR;
    QUOTED -> END_OR_ESCAPED [ label = "escape_char,quote_char" ];
    END_OR_ESCAPED -> QUOTED_END;
    END_OR_ESCAPED -> ESCAPED;
}
